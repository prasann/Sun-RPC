/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _FILERPC_H_RPCGEN
#define _FILERPC_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>

#define MAXNAME 128
#define MAXBUF 512

typedef char *filename;
#ifdef __cplusplus
extern "C" bool_t xdr_filename(XDR *, filename*);
#elif __STDC__
extern  bool_t xdr_filename(XDR *, filename*);
#else /* Old Style C */
bool_t xdr_filename();
#endif /* Old Style C */


typedef int handle;
#ifdef __cplusplus
extern "C" bool_t xdr_handle(XDR *, handle*);
#elif __STDC__
extern  bool_t xdr_handle(XDR *, handle*);
#else /* Old Style C */
bool_t xdr_handle();
#endif /* Old Style C */


struct openargs {
	filename file;
	int mode;
};
typedef struct openargs openargs;
#ifdef __cplusplus
extern "C" bool_t xdr_openargs(XDR *, openargs*);
#elif __STDC__
extern  bool_t xdr_openargs(XDR *, openargs*);
#else /* Old Style C */
bool_t xdr_openargs();
#endif /* Old Style C */


struct readargs {
	handle h;
	int nbytes;
};
typedef struct readargs readargs;
#ifdef __cplusplus
extern "C" bool_t xdr_readargs(XDR *, readargs*);
#elif __STDC__
extern  bool_t xdr_readargs(XDR *, readargs*);
#else /* Old Style C */
bool_t xdr_readargs();
#endif /* Old Style C */


struct readresults {
	int status;
	union {
		struct {
			u_int buf_len;
			char *buf_val;
		} buf;
		int error;
	} readresults_u;
};
typedef struct readresults readresults;
#ifdef __cplusplus
extern "C" bool_t xdr_readresults(XDR *, readresults*);
#elif __STDC__
extern  bool_t xdr_readresults(XDR *, readresults*);
#else /* Old Style C */
bool_t xdr_readresults();
#endif /* Old Style C */


struct writeargs {
	handle h;
	struct {
		u_int buf_len;
		char *buf_val;
	} buf;
};
typedef struct writeargs writeargs;
#ifdef __cplusplus
extern "C" bool_t xdr_writeargs(XDR *, writeargs*);
#elif __STDC__
extern  bool_t xdr_writeargs(XDR *, writeargs*);
#else /* Old Style C */
bool_t xdr_writeargs();
#endif /* Old Style C */


struct writeresults {
	int status;
	union {
		int nbytes;
		int error;
	} writeresults_u;
};
typedef struct writeresults writeresults;
#ifdef __cplusplus
extern "C" bool_t xdr_writeresults(XDR *, writeresults*);
#elif __STDC__
extern  bool_t xdr_writeresults(XDR *, writeresults*);
#else /* Old Style C */
bool_t xdr_writeresults();
#endif /* Old Style C */


#define FRPC_PROG ((rpc_uint)0x13451111)
#define FRPC_VERS ((rpc_uint)1)

#ifdef __cplusplus
#define OPEN ((rpc_uint)1)
extern "C" handle * open_1(openargs *, CLIENT *);
extern "C" handle * open_1_svc(openargs *, struct svc_req *);
#define CLOSE ((rpc_uint)2)
extern "C" bool_t * close_1(handle *, CLIENT *);
extern "C" bool_t * close_1_svc(handle *, struct svc_req *);
#define READ ((rpc_uint)3)
extern "C" readresults * read_1(readargs *, CLIENT *);
extern "C" readresults * read_1_svc(readargs *, struct svc_req *);
#define WRITE ((rpc_uint)4)
extern "C" writeresults * write_1(writeargs *, CLIENT *);
extern "C" writeresults * write_1_svc(writeargs *, struct svc_req *);

#elif __STDC__
#define OPEN ((rpc_uint)1)
extern  handle * open_1(openargs *, CLIENT *);
extern  handle * open_1_svc(openargs *, struct svc_req *);
#define CLOSE ((rpc_uint)2)
extern  bool_t * close_1(handle *, CLIENT *);
extern  bool_t * close_1_svc(handle *, struct svc_req *);
#define READ ((rpc_uint)3)
extern  readresults * read_1(readargs *, CLIENT *);
extern  readresults * read_1_svc(readargs *, struct svc_req *);
#define WRITE ((rpc_uint)4)
extern  writeresults * write_1(writeargs *, CLIENT *);
extern  writeresults * write_1_svc(writeargs *, struct svc_req *);

#else /* Old Style C */
#define OPEN ((rpc_uint)1)
extern  handle * open_1();
extern  handle * open_1_svc();
#define CLOSE ((rpc_uint)2)
extern  bool_t * close_1();
extern  bool_t * close_1_svc();
#define READ ((rpc_uint)3)
extern  readresults * read_1();
extern  readresults * read_1_svc();
#define WRITE ((rpc_uint)4)
extern  writeresults * write_1();
extern  writeresults * write_1_svc();
#endif /* Old Style C */

#endif /* !_FILERPC_H_RPCGEN */
